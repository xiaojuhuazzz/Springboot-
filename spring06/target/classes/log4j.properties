#设定root日志的输出级别为INFO，appender为控制台输出stdout
# LOG4J配置
log4j.rootCategory=INFO, stdout, file, errorfile
#对com.example.spring06包下的日志定义是这样的，固定定义了DEBUG级别，并输出到名为didifile定义的appender中
#log4j.category.com.example.spring06=DEBUG, spring06file
log4j.category.com.example.spring06=${logging.level.com.example.spring06}, spring06file
log4j.logger.error=errorfile
# 控制台输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
#log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
# root日志输出
log4j.appender.file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.file.file=logs/all.log
log4j.appender.file.DatePattern='.'yyyy-MM-dd
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
# error日志输出
log4j.appender.errorfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorfile.file=logs/error.log
log4j.appender.errorfile.DatePattern='.'yyyy-MM-dd
log4j.appender.errorfile.Threshold=ERROR
log4j.appender.errorfile.layout=org.apache.log4j.PatternLayout
log4j.appender.errorfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L - %m%n
# com.example.spring06下的日志输出
log4j.appender.spring06file=org.apache.log4j.DailyRollingFileAppender
log4j.appender.spring06file.file=logs/my.log
log4j.appender.spring06file.DatePattern='.'yyyy-MM-dd
log4j.appender.spring06file.layout=org.apache.log4j.PatternLayout
log4j.appender.spring06file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %c{1}:%L ---- %m%n